/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MessageListPanel.java
 *
 * Created on 17.mar.2011, 10:21:59
 */

package no.ntnu.fp.gui;

import java.util.List;
import javax.swing.DefaultListModel;
import no.ntnu.fp.model.*;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import no.ntnu.fp.gui.listeners.GeneralListener;

/**
 *
 * @author Erlend Dahl
 */
public class MessageListPanel extends javax.swing.JPanel {

    /** Creates new form MessageListPanel */
    public MessageListPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        btnYes = new javax.swing.JButton();
        btnNo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        btnYes.setText("Ja, jeg kommer");
        btnYes.setEnabled(false);
        btnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesActionPerformed(evt);
            }
        });

        btnNo.setText("Nei, jeg kommer ikke");
        btnNo.setEnabled(false);
        btnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoActionPerformed(evt);
            }
        });

        jLabel1.setText("Answer to selected message:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnYes, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnYes, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(btnNo, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesActionPerformed
        answerAndRemoveSelectedMessage(true);
    }//GEN-LAST:event_btnYesActionPerformed

    private void btnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoActionPerformed
        answerAndRemoveSelectedMessage(false);
    }//GEN-LAST:event_btnNoActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged

        btnYes.setEnabled(jList1.getSelectedIndex()>=0);
        btnNo.setEnabled(jList1.getSelectedIndex()>=0);

        if(jList1.getSelectedIndex()<0)
            return;

        Message m = (Message)dlm.getElementAt(jList1.getSelectedIndex());

        btnNo.setVisible(m.getType()==Message.Type.Invitation);
        btnYes.setText(m.getType()==Message.Type.Information ? "Det er mottatt" : "Ja, jeg kommer");
        
    }//GEN-LAST:event_jList1ValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNo;
    private javax.swing.JButton btnYes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

   DefaultListModel dlm = new DefaultListModel();
   /**
    * Reads all the messages with the given email as receiver.
    * @param email
    */
   public void readMessages(String email)
   {
       List<Message> messages = Communication.getMessages(email);
       jList1.setModel(dlm);
       jList1.setCellRenderer(new MessageRenderer());
       for(Message m:messages)
       {
           System.out.println(m.getContent());
           dlm.addElement(m);
       }

       if(dlm.getSize()>0)
           jList1.setSelectedIndex(0);
   }

    /**
    * Reads all the messages with the given user as receiver.
    * @param email
    */
   public void readMessages(Person p)
    {
        readMessages(p.getEmail());
    }

   GeneralListener listener = null;
   public void setGeneralListener(GeneralListener l)
   {
       listener = l;
   }

   private void answerAndRemoveSelectedMessage(boolean answer)
    {
       Message m = (Message)dlm.getElementAt(jList1.getSelectedIndex());
       Communication.answerMessage(m, answer);
       dlm.removeElement(m);
       MainPanel.getMainForm().refreshCalendar();

       if(dlm.size()>0)
           jList1.setSelectedIndex(0);

       if(listener!=null)
           listener.action();

       jList1.updateUI();
   }
}
